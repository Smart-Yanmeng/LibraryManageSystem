<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.york.dao.ILendListMapper">
    <resultMap id="BaseResultMap" type="com.york.entity.LendEntity">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="bookId" jdbcType="INTEGER" property="bookId"/>
        <result column="readerId" jdbcType="INTEGER" property="readerId"/>
        <result column="lendDate" jdbcType="TIMESTAMP" property="lendDate"/>
        <result column="backDate" jdbcType="TIMESTAMP" property="backDate"/>
        <result column="backType" jdbcType="INTEGER" property="backType"/>
        <result column="exceptRemarks" jdbcType="VARCHAR" property="exceptRemarks"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, bookId, readerId, lendDate, backDate, backType, exceptRemarks
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from lend_list
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from lend_list
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="com.york.entity.LendEntity">
        insert into lend_list (id, bookId, readerId,
                               lendDate, backDate, backType,
                               exceptRemarks)
        values (#{id,jdbcType=INTEGER}, #{bookId,jdbcType=INTEGER}, #{readerId,jdbcType=INTEGER},
                #{lendDate,jdbcType=TIMESTAMP}, #{backDate,jdbcType=TIMESTAMP}, #{backType,jdbcType=INTEGER},
                #{exceptRemarks,jdbcType=VARCHAR})
    </insert>

    <insert id="insertSelective" parameterType="com.york.entity.LendEntity">
        insert into lend_list
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="bookId != null">
                bookId,
            </if>
            <if test="readerId != null">
                readerId,
            </if>
            <if test="lendDate != null">
                lendDate,
            </if>
            <if test="backDate != null">
                backDate,
            </if>
            <if test="backType != null">
                backType,
            </if>
            <if test="exceptRemarks != null">
                exceptRemarks,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="bookId != null">
                #{bookId,jdbcType=INTEGER},
            </if>
            <if test="readerId != null">
                #{readerId,jdbcType=INTEGER},
            </if>
            <if test="lendDate != null">
                #{lendDate,jdbcType=TIMESTAMP},
            </if>
            <if test="backDate != null">
                #{backDate,jdbcType=TIMESTAMP},
            </if>
            <if test="backType != null">
                #{backType,jdbcType=INTEGER},
            </if>
            <if test="exceptRemarks != null">
                #{exceptRemarks,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.york.entity.LendEntity">
        update lend_list
        <set>
            <if test="bookId != null">
                bookId = #{bookId,jdbcType=INTEGER},
            </if>
            <if test="readerId != null">
                readerId = #{readerId,jdbcType=INTEGER},
            </if>
            <if test="lendDate != null">
                lendDate = #{lendDate,jdbcType=TIMESTAMP},
            </if>
            <if test="backDate != null">
                backDate = #{backDate,jdbcType=TIMESTAMP},
            </if>
            <if test="backType != null">
                backType = #{backType,jdbcType=INTEGER},
            </if>
            <if test="exceptRemarks != null">
                exceptRemarks = #{exceptRemarks,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.york.entity.LendEntity">
        update lend_list
        set bookId        = #{bookId,jdbcType=INTEGER},
            readerId      = #{readerId,jdbcType=INTEGER},
            lendDate      = #{lendDate,jdbcType=TIMESTAMP},
            backDate      = #{backDate,jdbcType=TIMESTAMP},
            backType      = #{backType,jdbcType=INTEGER},
            exceptRemarks = #{exceptRemarks,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <resultMap id="queryLendListAllMap" type="com.york.entity.LendEntity" extends="BaseResultMap">
        <!--图书信息,需要得到图书名-->
        <association property="bookInfoEntity" javaType="com.york.entity.BookInfoEntity">
            <id property="id" column="id"></id>
            <result property="name" column="bookName"></result>
        </association>

        <!--读者信息，需要得到读者卡号和真实姓名-->
        <association property="readerInfoEntity" javaType="com.york.entity.ReaderInfoEntity">
            <id property="id" column="id"></id>
            <result property="realName" column="realName"></result>
            <result property="readerNumber" column="readerNumber"></result>
        </association>
    </resultMap>

    <select id="queryLendListAll" parameterType="com.york.entity.LendEntity" resultMap="queryLendListAllMap">
        SELECT lend.*,
        book.name as bookName,
        reader.realName as realName,
        reader.readerNumber
        from lend_list lend LEFT JOIN book_info book on book.id=lend.bookId
        LEFT JOIN reader_info reader on reader.id=lend.readerId
        <where>
            <if test="bookInfoEntity!=null">
                <!--根据图书名称查询-->
                <if test="bookInfoEntity.name!=null and bookInfoEntity.name!=''">
                    and book.name like '%${bookInfoEntity.name}%'
                </if>
                <!-- 判断返还时间是否为空 -->
                <if test="bookInfoEntity.status!=null and bookInfoEntity.status==1">
                    and book.status=1 and backDate is null
                </if>
                <if test="bookInfoEntity.status!=null and bookInfoEntity.status==0">
                    and book.status=0 and backDate is not null
                </if>
            </if>
            <!-- 根据借阅卡查询 -->
            <if test="readerInfoEntity!=null">
                <if test="readerInfoEntity.readerNumber!=null and readerInfoEntity.readerNumber!=''">
                    and readerNumber like '%${readerInfoEntity.readerNumber}%'
                </if>
            </if>
            <!-- 根据归还类型查询 -->
            <if test="backType!=null">
                and backType=#{backType}
            </if>
        </where>
        order by lend.lendDate desc
    </select>

    <!-- 还书 -->
    <update id="updateLendListSubmit" parameterType="com.york.entity.LendEntity">
        update lend_list
        <set>
            backDate=#{backDate},
            <if test="backType!=null">
                backType=#{backType},
            </if>
            <if test="exceptRemarks!=null and exceptRemarks!=''">
                exceptRemarks=#{exceptRemarks}
            </if>
        </set>
        where id=#{id}
    </update>

    <!-- 查询时间线 -->
    <select id="queryLookBookList" resultMap="queryLendListAllMap">
        SELECT
        lend.*,
        reader.readerNumber,
        bookInfoEntity.name AS bookName,
        reader.realName AS realName
        FROM
        lend_list lend
        LEFT JOIN reader_info reader ON reader.id = lend.readerId
        LEFT JOIN book_info bookInfoEntity ON bookInfoEntity.id = lend.bookId
        <where>

            <if test="bid!=null">and bookInfoEntity.id=#{bid}</if>

            <if test="rid!=null">and reader.id=#{rid}</if>

        </where>
        order by lend.id desc
    </select>
</mapper>
